function tests = test_chamferDistanceMap
% Test suite for the file chamferDistanceMap.
%
%   Test suite for the file chamferDistanceMap
%
%   Example
%   test_chamferDistanceMap
%
%   See also
%     chamferDistanceMap

% ------
% Author: David Legland
% e-mail: david.legland@inrae.fr
% Created: 2021-11-18,    using Matlab 9.10.0.1684407 (R2021a) Update 3
% Copyright 2021 INRAE - BIA-BIBS.

tests = functiontests(localfunctions);

function test_SimpleBinary(testCase) %#ok<*DEFNU>
% Test call of function without argument.

% generate an image of a 10x10 square, with one pixel border
img = Image.false([12, 12]);
img(2:11, 2:11) = 1;

% compute distance map
distMap = chamferDistanceMap(img);

assertEqual(testCase, size(img), size(distMap));
% distance equal to 1 on the borders of the square
assertEqual(testCase, 1, distMap(2, 5));
assertEqual(testCase, 1, distMap(11, 5));
assertEqual(testCase, 1, distMap(5, 2));
assertEqual(testCase, 1, distMap(5, 11));
% distance equal to 5 in the middle of the square
assertEqual(testCase, 5, distMap(6, 6));


function test_TouchingLabels(testCase)
% Aim is to compute distance map within each label, even if some of them
% touch each other.
% Uses an image with a completely landlocked label region.

data = [...
    0 0 0 0 0 0 0 0 0 0 0; ...
    0 1 1 1 2 2 2 3 3 3 0; ...
    0 1 1 1 2 2 2 3 3 3 0; ...
    0 1 1 1 2 2 2 3 3 3 0; ...
    0 1 1 1 4 4 4 3 3 3 0; ...
    0 1 1 1 4 4 4 3 3 3 0; ...
    0 1 1 1 4 4 4 3 3 3 0; ...
    0 1 1 1 5 5 5 3 3 3 0; ...
    0 1 1 1 5 5 5 3 3 3 0; ...
    0 1 1 1 5 5 5 3 3 3 0; ...
    0 0 0 0 0 0 0 0 0 0 0; ...
];
img = Image(data, 'type', 'label');


distMap = chamferDistanceMap(img);

exp = Image([...
    0 0 0 0 0 0 0 0 0 0 0; ...
    0 1 1 1 1 1 1 1 1 1 0; ...
    0 1 2 1 1 2 1 1 2 1 0; ...
    0 1 2 1 1 1 1 1 2 1 0; ...
    0 1 2 1 1 1 1 1 2 1 0; ...
    0 1 2 1 1 2 1 1 2 1 0; ...
    0 1 2 1 1 1 1 1 2 1 0; ...
    0 1 2 1 1 1 1 1 2 1 0; ...
    0 1 2 1 1 2 1 1 2 1 0; ...
    0 1 1 1 1 1 1 1 1 1 0; ...
    0 0 0 0 0 0 0 0 0 0 0; ...
]);
assertEqual(testCase, size(img), size(distMap));
assertEqual(testCase, distMap.Data, exp.Data);
